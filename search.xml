<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo+Coding搭建自己的博客网站系列3-详述站点全局配置文件]]></title>
    <url>%2F2019%2F01%2F18%2FHexo-Coding%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%973-%E8%AF%A6%E8%BF%B0%E7%AB%99%E7%82%B9%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[Hexo 目录如下图这是Blog文件的目录。从上到下依次解释 node_modules:hexo整个项目的环境依赖，hexo初始化时自动生成的。 public:存放的是整个项目的页面，样式，及逻辑代码。 scaffolds:scaffolds是脚手架的意思，当你新建一篇文章(hexo new page ‘title’)的时候，hexo是根据这个目录下的文件进行构建的。 source:这个目录很重要，新建的文章都是在保存在这个目录下的_posts 。_posts 目录下是一个个 markdown 文件。 themes:是网站的主题目录，Hexo有很好的主题扩展能力，开源主题也很丰富，该目录下每一个子目录就是一个主题。 _config.yml:站点全局配置文件。 站点全局配置文件 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: 七七的旧夏天 #网站主标题subtitle: #网站副标题description: 热爱生活，珍惜每一天 #网站描述keywords: 客观、理智、冷静 #关键字author: Fitz #作者language: zh_CN #语言timezone: #网站时区。默认使用您电脑的时区# URLurl: https://fitz1318.top #你的站点urlroot: / #站点的根目录permalink: :year/:month/:day/:title/ #文章的永久链接格式permalink_defaults: #永久链接中各部分的默认值# Directorysource_dir: source #资源文件夹，这个文件夹用来存放内容public_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件tag_dir: tags #标签文件夹archive_dir: archives #归档文件夹category_dir: categories #分类文件夹code_dir: downloads/code #Include code 文件夹i18n_dir: :lang #国际化（il8n)文件夹skip_render: README.md #跳过指定文件的渲染# Writingnew_post_name: :title.md #新文章的文件名称default_layout: post #预设布局titlecase: false #把标题转换成titlecaseexternal_link: true #在新标签中打开链接filename_case: 0 #把文件名称转换成（1）小写（2）大写render_drafts: false #是否显示草稿post_asset_folder: false #是否启动Asset文件夹relative_link: false #把链接改为与根目录的相对位址future: true #显示未来的文章highlight: #内容中代码块的设置 enable: true line_number: true auto_detect: true tab_replace: # Home page settingindex_generator: path: '' per_page: 10 #每页显示的文章数量 order_by: -date #文章排序规则 # Category &amp; Tagdefault_category: uncategorized #默认分类category_map: #分类别名tag_map: #标签别名# Date / Time formatdate_format: YYYY-MM-DD #日期格式time_format: HH:mm:ss #时间格式# Paginationper_page: 10 #分页数量pagination_dir: page# Extensionstheme: next #主题名称# Deploymentdeploy: #部署部分的设置 type: git #部署类型 repo: git@git.coding.net:fitz1318/Fitz1318.git #部署仓库地址 #git@github.com:Fitz1318/Fitz1318.github.io.git baranch: master]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Coding搭建自己的博客网站系列2-部署博客到Coding]]></title>
    <url>%2F2019%2F01%2F18%2FHexo-Coding%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%972-%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E5%88%B0Coding%2F</url>
    <content type="text"><![CDATA[前言最初，我是选择部署到Github上的，但是最后在弄百度收录时出现了问题，Github Pages屏蔽了百度爬虫，这样子你的博客就没办法被百度收录了。 注册并新建仓库Coding的网址 ，点击进去注册一个账号，然后新建一个仓库新建一个名为yourname.coding.me的项目，其中这里的yourname最好是coding注册时的username，等项目部署成功后它就是你博客的访问地址。 开启Pages服务如下图所示依次点击代码-&gt; Pages服务，开启后我们就可以通过 用户名+网站后缀来访问博客，而且还可以绑定域名通过固定域名来访问 连接到 Coding在管理Git项目时，无论是GitHub还是Coding我们可以通过SSH、HTTPS两种方式来clone或者push代码，当使用HTTPS的方式来管理代码，每次操作时都需要验证用户名和密码；而使用SSH方式Push代码之前需要配置个人的SSH key,这样就可以省掉繁琐的验证步骤。 配置SSH key以下命令均在Git bash下运行 检查你的电脑是否已经有了SSH Key12 cd ~/.sshls 如果该目录下存在id_rsa.pub或id_dsa.pub文件,那么直接进行第三步 创建一个SSH Key键入命令ssh-keygen -t rsa -C &quot;username&quot;,运行命令后会让你输入一个文件名，用于保存刚才生成的SSH key代码Generating public/private rsa key pair. Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]此处我们直接按下回车使用默认文件名创建，那么就会生成id_rsa和id_rsa.pub两个秘钥文件。接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是Coding管理者的密码），当然，你也可以不输入密码，直接按回车。那么push的时候就不需要输入密码，直接提交到Git服务器上了. 在Coding中配置SSH key在刚才生成的文件夹中找到id_rsa.pub,用记事本打开后全选复制。打开浏览器，进入我们Coding的工作台，账户-&gt;SSH公钥，按如下操作，将生成的SSH key添加 部署发布项目在我们创建的博客项目工作空间中找到_config.yml文件，打开后翻到最后面，进行设置，主要以这里要换成你的项目名称。 12345deploy: type: git repo: git@git.coding.net:fitz1318/Fitz1318.git #repo: git@github.com:Fitz1318/Fitz1318.github.io.git baranch: master 保存后关闭。在项目当前目录打开Git Bash ，因为项目的部署会用到hexo-deployer-git，所以先安装该插件,键入命令npm install hexo-deployer-git --save安装完成后继续键入命令素质三连hexo clean &amp;&amp; hexo g &amp;&amp; hexo d,等待完成，这时候在浏览器输入网址https://youname.coding.me，例如我的是https://fitz1318.coding.me。就可以看到自己的博客网站了。 结束语至此，部署博客到Coding上就完成了。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Coding搭建自己的博客网站系列1-本地环境部署]]></title>
    <url>%2F2019%2F01%2F17%2FHexo-Coding%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%971-%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[前言 最近我终于实现了自己很久之前关于搭建自己专属的博客网站的目标，现在把搭建期间的过程和走过的坑记录下来，如果你对搭建自己的网站有兴趣，不妨可以参考一下我的文章。首先我说下自己的版本hexo 3.8.0,Next 6.7.0,本地环境部署需要做以下几件事 安装Node.js: Node.js安装包下载地址，选择安装位置，然后安装时一直点next即可。 安装Git: Git安装包下载地址,选择安装位置，然后安装时一直点next即可。 安装Hexo:设置全局淘宝源，键入命令 npm config set registry https://registry.npm.taobao.org这样就可以加速下载,然后键入命令npm install -g hexo-cli,等待安装完成，至此Hexo的环境就搭建好了。 博客初始化：在电脑的适当位置，我选择安装到F盘，然后右键选择Git bash，如下图所示键入命令hexo init Blog新建完成后，在路径下会产生下列这些文件夹和文件1234567├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 在这里统一说一下站点配置文件即 _config.yml，主题配置文件即Blog\themes\主题文件夹\_config.yml（我这里是Next主题即为Blog\themes\next\_config.yml) 本地访问:点击Blog，然后右键选择Git bash here，如下图所示 键入启动命令hexo s，然后浏览器访问http://localhost:4000/，会出现下图至此本地环境部署结束。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[POJ2586]]></title>
    <url>%2F2019%2F01%2F14%2FPOJ2586%2F</url>
    <content type="text"><![CDATA[题目链接:http://poj.org/problem?id=2586 大致题意：已知一个公司在某一年中，每个月要么固定盈利s、要么固定亏损d。 但是具体哪个月盈利、哪个月亏损却不得而知。不过可以肯定的是，这一年中，任意的连续5个月盈亏和必定是亏损。 问这年是否存在盈利的可能，若可能盈利，输出最大的盈利额，若不存在盈利，输出”Deficit”。 解题思路： ①假设所有的月均为盈利，判断第一个连续五月是亏损，如果不亏损，将最后一个月设为亏损，再次判断如果仍亏损的话让倒数第二个月设为亏损。。直到满足情况为止。 ②依次判断8个连续的五月，最后检查总情况。 AC代码：12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;iostream&gt;using namespace std;int add(int m[], int n)&#123; int i = 0; int result = 0; for(int i = n; i &lt; n + 5; i++) &#123; result = result + m[i]; &#125; return result;&#125;int main()&#123; int d, s; int month[12]; while(cin &gt;&gt; s &gt;&gt; d) &#123; for(int i = 1; i &lt;= 12; i++) &#123; month[i] = s; &#125; for(int i = 1; i &lt;= 8; i++) &#123; for(int j = 1; j &lt;= 5; j++) &#123; int flag = add(month, i); if(flag &gt; 0) &#123; month[i + 5 - j] = -d; &#125; else break; &#125; &#125; int surplus = 0; for(int i = 1; i &lt;= 12; i++) &#123; surplus += month[i]; &#125; if(surplus &gt; 0) &#123; cout &lt;&lt; surplus &lt;&lt; endl; &#125; else cout &lt;&lt; "Deficit" &lt;&lt; endl; &#125; return 0;&#125;]]></content>
      <categories>
        <category>POJ</category>
      </categories>
      <tags>
        <tag>POJ</tag>
      </tags>
  </entry>
</search>
